{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.config.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/add-hologram/add-hologram.component.html","webpack:///./src/app/components/add-hologram/add-hologram.component.scss","webpack:///./src/app/components/add-hologram/add-hologram.component.ts","webpack:///./src/app/components/hologram/hologram.component.html","webpack:///./src/app/components/hologram/hologram.component.scss","webpack:///./src/app/components/hologram/hologram.component.ts","webpack:///./src/app/components/holograms/holograms.component.html","webpack:///./src/app/components/holograms/holograms.component.scss","webpack:///./src/app/components/holograms/holograms.component.ts","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.scss","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/register/register.component.html","webpack:///./src/app/components/register/register.component.scss","webpack:///./src/app/components/register/register.component.ts","webpack:///./src/app/components/settings/settings.component.html","webpack:///./src/app/components/settings/settings.component.scss","webpack:///./src/app/components/settings/settings.component.ts","webpack:///./src/app/shared/components/footer/footer.component.html","webpack:///./src/app/shared/components/footer/footer.component.scss","webpack:///./src/app/shared/components/footer/footer.component.ts","webpack:///./src/app/shared/components/header/header.component.html","webpack:///./src/app/shared/components/header/header.component.scss","webpack:///./src/app/shared/components/header/header.component.ts","webpack:///./src/app/shared/components/nav/nav.component.html","webpack:///./src/app/shared/components/nav/nav.component.scss","webpack:///./src/app/shared/components/nav/nav.component.ts","webpack:///./src/app/shared/pipes/capitalize.pipe.ts","webpack:///./src/app/shared/services/auth/auth.guard.ts","webpack:///./src/app/shared/services/auth/auth.service.ts","webpack:///./src/app/shared/services/auth/token-interceptor.service.ts","webpack:///./src/app/shared/services/hologram/hologram.service.ts","webpack:///./src/app/shared/services/user/user.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// Services\nimport { AuthGuard } from './shared/services/auth/auth.guard';\n\n// Components\nimport { HologramsComponent } from \"./components/holograms/holograms.component\";\nimport { HologramComponent } from \"./components/hologram/hologram.component\";\nimport { AddHologramComponent } from \"./components/add-hologram/add-hologram.component\";\nimport { SettingsComponent } from \"./components/settings/settings.component\";\nimport { RegisterComponent } from \"./components/register/register.component\";\nimport { LoginComponent } from \"./components/login/login.component\";\n\nconst routes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    redirectTo: 'holograms',\n  },\n  {\n    path: 'holograms',\n    component: HologramsComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'hologram/:hologramid',\n    component: HologramComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'add-hologram',\n    component: AddHologramComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'settings',\n    component: SettingsComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n      path: 'register',\n      component: RegisterComponent\n  },\n  {\n      path: 'login',\n      component: LoginComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<app-header></app-header>\\n\\n<div id=\\\"content\\\" class=\\\"container\\\">\\n\\n    <router-outlet></router-outlet>\\n\\n</div>\\n\\n<app-footer></app-footer>\"","module.exports = \"#content {\\n  padding: 20px 0; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYXgvU2l0ZXMvaW50ZXJuYWwvaG9sb2dyYW0tbWFydC9jbGllbnQvc3JjL2FwcC9hcHAuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxnQkFBZSxFQUNsQiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIiNjb250ZW50IHtcbiAgICBwYWRkaW5nOiAyMHB4IDA7XG59Il19 */\"","import { Component } from '@angular/core';\n\n// Services\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent { }\n","import { environment } from \"../environments/environment\";\n\nexport const config = {\n    appName: 'hologram mart',\n    version: '0.0.0',\n    backendAPI_URL: `${environment.backendHost}/api`,\n    backendAUTH_API_URL: `${environment.backendHost}/auth`\n};","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\n\n// Services\nimport { HologramService } from \"./shared/services/hologram/hologram.service\";\nimport { UserService } from \"./shared/services/user/user.service\";\nimport { AuthService } from \"./shared/services/auth/auth.service\";\nimport { AuthGuard } from \"./shared/services/auth/auth.guard\";\nimport { TokenInterceptorService } from './shared/services/auth/token-interceptor.service';\n\n// Pipes\nimport { CapitalizePipe } from \"./shared/pipes/capitalize.pipe\";\n\n// components\nimport { AppComponent } from './app.component';\nimport { HologramsComponent } from './components/holograms/holograms.component';\nimport { HologramComponent } from './components/hologram/hologram.component';\nimport { AddHologramComponent } from './components/add-hologram/add-hologram.component';\nimport { HeaderComponent } from './shared/components/header/header.component';\nimport { FooterComponent } from './shared/components/footer/footer.component';\nimport { NavComponent } from './shared/components/nav/nav.component';\nimport { SettingsComponent } from './components/settings/settings.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { LoginComponent } from './components/login/login.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HologramsComponent,\n    HologramComponent,\n    AddHologramComponent,\n    HeaderComponent,\n    FooterComponent,\n    NavComponent,\n    SettingsComponent,\n    RegisterComponent,\n    LoginComponent,\n    CapitalizePipe\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  providers: [\n    HologramService,\n    UserService,\n    AuthService,\n    AuthGuard,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptorService,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<form [formGroup]=\\\"hologramForm\\\" (ngSubmit)=\\\"onSubmit(hologramForm.value)\\\">\\n    <fieldset>\\n        <legend>Add Hologram</legend>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"exampleInputEmail1\\\">First Name</label>\\n            <input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"firstname\\\" formControlName=\\\"firstname\\\" placeholder=\\\"Enter First Name\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"exampleInputEmail1\\\">Last Name</label>\\n            <input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"lastname\\\" formControlName=\\\"lastname\\\" placeholder=\\\"Enter Last Name\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"exampleInputEmail1\\\">Image URL</label>\\n            <input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"imageUrl\\\" formControlName=\\\"imageUrl\\\" placeholder=\\\"Enter Image URL\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"exampleInputEmail1\\\">Price</label>\\n            <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"price\\\" formControlName=\\\"price\\\" placeholder=\\\"Enter Price\\\">\\n        </div>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n    </fieldset>\\n</form>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRkLWhvbG9ncmFtL2FkZC1ob2xvZ3JhbS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n// Services\nimport { HologramService } from \"../../shared/services/hologram/hologram.service\";\n\n@Component({\n  selector: 'app-add-hologram',\n  templateUrl: './add-hologram.component.html',\n  styleUrls: ['./add-hologram.component.scss']\n})\nexport class AddHologramComponent implements OnInit {\n\n  hologramForm: FormGroup;\n\n  constructor(private router: Router,\n              private fb: FormBuilder,\n              private hologramService: HologramService) { \n    this.hologramForm = this.fb.group({\n      firstname: [''],\n      lastname: [''],\n      imageUrl: [''],\n      price: ['']\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  onSubmit(form: any): void {\n    this.hologramService.addHologram(this.hologramForm.value)\n      .subscribe((hologram: any) => {\n        console.log('hologram added!');\n        this.router.navigate(['/']);\n      });\n  }\n\n}\n","module.exports = \"<div *ngIf=\\\"hologram\\\" id=\\\"hologram\\\" class=\\\"card mb-3\\\">\\n    <h3 class=\\\"card-header\\\">\\n        <span>{{ hologram.firstname }} {{ hologram.lastname }} </span>\\n\\n        <button (click)=\\\"deleteHologram(hologram._id)\\\" type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n    </h3>\\n    <img style=\\\"height: 200px; width: 100%; display: block;\\\" [src]=\\\"hologram.imageUrl\\\" alt=\\\"hologram.firstname\\\">\\n    <ul class=\\\"list-group list-group-flush\\\">\\n        <li class=\\\"list-group-item\\\">Price: {{ hologram.price | currency }}</li>\\n    </ul>\\n    <div class=\\\"card-body\\\">\\n        <a class=\\\"btn btn-primary\\\">Purchase</a>\\n        <a [routerLink]=\\\"['/holograms']\\\" class=\\\"btn btn-secondary ml-3\\\">Back to Holograms</a>\\n    </div>\\n    <div class=\\\"card-footer text-muted\\\">\\n        2 days ago\\n    </div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaG9sb2dyYW0vaG9sb2dyYW0uY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\n// Services\nimport { HologramService } from \"../../shared/services/hologram/hologram.service\";\n\n@Component({\n  selector: 'app-hologram',\n  templateUrl: './hologram.component.html',\n  styleUrls: ['./hologram.component.scss']\n})\nexport class HologramComponent implements OnInit {\n\n  hologram: any;\n\n  constructor(private hologramService: HologramService,\n              private activatedRoute: ActivatedRoute,\n              private router: Router) { }\n\n  ngOnInit() {\n    let hologramid: string = this.activatedRoute.snapshot.url[1].path || null;\n\n    if ( hologramid ) {\n      this.hologramService.getHologram(hologramid)\n        .subscribe((hologram: any) => {\n          this.hologram = hologram;\n        });\n    }\n  }\n\n  deleteHologram(hologramid: any) {\n    this.hologramService.deleteHologram(hologramid)\n      .subscribe(() => {\n        console.log('hologram deleted!');\n        this.router.navigate(['/']);\n      });    \n  }\n\n}\n","module.exports = \"<div *ngIf=\\\"!holograms.length\\\" class=\\\"alert alert-dismissible alert-warning\\\">\\n    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n    <span>Sorry, we're all out of holograms right now, check back later!</span>\\n</div>\\n\\n<div *ngIf=\\\"holograms\\\">\\n    <div *ngFor=\\\"let hologram of holograms\\\" class=\\\"card mb-3\\\">\\n        <h3 class=\\\"card-header\\\">\\n            <span>{{ hologram.firstname }} {{ hologram.lastname }} </span>\\n    \\n            <button (click)=\\\"deleteHologram(hologram._id)\\\" type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\n            </button>\\n        </h3>\\n        <img style=\\\"height: 200px; width: 100%; display: block;\\\" [src]=\\\"hologram.imageUrl\\\" alt=\\\"hologram.firstname\\\">\\n        <ul class=\\\"list-group list-group-flush\\\">\\n            <li class=\\\"list-group-item\\\">Price: {{ hologram.price | currency }}</li>\\n        </ul>\\n        <div class=\\\"card-body\\\">\\n            <a class=\\\"btn btn-primary\\\">Purchase</a>\\n            <a [routerLink]=\\\"['/hologram', hologram._id ]\\\" class=\\\"btn btn-secondary ml-3\\\">View</a>\\n        </div>\\n        <div class=\\\"card-footer text-muted\\\">\\n            2 days ago\\n        </div>\\n    </div>\\n</div>\"","module.exports = \".hologram {\\n  margin-bottom: 10px;\\n  border: thin solid #FFF;\\n  color: #FFF; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYXgvU2l0ZXMvaW50ZXJuYWwvaG9sb2dyYW0tbWFydC9jbGllbnQvc3JjL2FwcC9jb21wb25lbnRzL2hvbG9ncmFtcy9ob2xvZ3JhbXMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxvQkFBbUI7RUFDbkIsd0JBQXVCO0VBQ3ZCLFlBQVcsRUFDZCIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaG9sb2dyYW1zL2hvbG9ncmFtcy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5ob2xvZ3JhbSB7XG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcbiAgICBib3JkZXI6IHRoaW4gc29saWQgI0ZGRjtcbiAgICBjb2xvcjogI0ZGRjtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\n// Services\nimport { HologramService } from \"../../shared/services/hologram/hologram.service\";\n\n@Component({\n  selector: 'app-holograms',\n  templateUrl: './holograms.component.html',\n  styleUrls: ['./holograms.component.scss']\n})\nexport class HologramsComponent implements OnInit {\n\n  holograms = [];\n\n  constructor(private hologramService: HologramService,\n              private router: Router) { }\n\n  ngOnInit() {\n    this.hologramService.getHolograms()\n      .subscribe((holograms: any[]) => {\n        this.holograms = holograms;\n        console.log('retrived holograms');\n      },\n      err => {\n        console.log(err);\n      });\n  }\n\n  deleteHologram(hologramid: any) {\n    this.hologramService.deleteHologram(hologramid)\n      .subscribe(() => {\n        console.log('hologram deleted!');\n        this.holograms = this.holograms.filter( hologram => hologram._id != hologramid);\n      });    \n  }\n\n}\n","module.exports = \"<form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onSubmit(loginForm.value)\\\">\\n    <fieldset>\\n        <legend>Login</legend>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"username\\\">Email</label>\\n            <input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"username\\\" formControlName=\\\"username\\\" placeholder=\\\"Enter email address\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"password\\\">Password</label>\\n            <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" formControlName=\\\"password\\\" placeholder=\\\"Enter Password\\\">\\n        </div>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n    </fieldset>\\n</form>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n// Services\nimport { AuthService } from \"../../shared/services/auth/auth.service\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n\n  constructor(private router: Router,\n              private authService: AuthService,\n              private fb: FormBuilder) { \n    this.loginForm = this.fb.group({\n      username: [''],\n      password: [''],\n    });\n  }\n\n  ngOnInit() {\n    if (this.authService.isAuthenticated) {\n      this.router.navigate(['/holograms']);\n    }\n  }\n\n  onSubmit(form: any): void {\n    this.authService.login(this.loginForm.value);\n  }\n\n}\n","module.exports = \"<form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"onSubmit(registerForm.value)\\\">\\n    <fieldset>\\n        <legend>Register</legend>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"firstname\\\">Firstname</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"firstname\\\" formControlName=\\\"firstname\\\" placeholder=\\\"Enter your firstname\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"lastname\\\">Lastname</label>\\n            <input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"lastname\\\" formControlName=\\\"lastname\\\" placeholder=\\\"Enter email lastname\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"username\\\">Email</label>\\n            <input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"username\\\" formControlName=\\\"username\\\" placeholder=\\\"Enter email address\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"password\\\">Password</label>\\n            <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" formControlName=\\\"password\\\" placeholder=\\\"Enter Password\\\">\\n        </div>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n    </fieldset>\\n</form>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, EventEmitter } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n// Services\nimport { AuthService } from \"../../shared/services/auth/auth.service\";\n\n@Component({\n  selector: 'fbl-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  private pageTitle: string = 'nav.register';\n\n  registerForm: FormGroup;\n\n  private registerEvent: EventEmitter<any>;\n\n  constructor(private router: Router,\n              private authService: AuthService,\n              private fb: FormBuilder) {\n    this.registerForm = this.fb.group({\n      firstname: [''],\n      lastname: [''],\n      username: [''],\n      password: ['']\n    });\n\n    this.registerEvent = new EventEmitter;\n  }\n\n  public ngOnInit(): void {\n    if (this.authService.isAuthenticated) {\n      this.router.navigate(['/holograms']);\n    }\n  }\n\n  public onSubmit(form: any): void {\n    this.registerEvent.emit();\n\n    this.authService.registerUser(this.registerForm.value);\n  }\n\n}\n","module.exports = \"<p>\\n  settings works!\\n</p>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc2V0dGluZ3Mvc2V0dGluZ3MuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<footer>\\n\\n    <div class=\\\"container text-center\\\">\\n\\n        <span>&copy; {{ CONFIG.appName | myCapitalize }} 2018. All rights reserved.</span>\\n\\n    </div>    \\n\\n</footer>\\n\"","module.exports = \"footer {\\n  padding: 5px 0 30px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYXgvU2l0ZXMvaW50ZXJuYWwvaG9sb2dyYW0tbWFydC9jbGllbnQvc3JjL2FwcC9zaGFyZWQvY29tcG9uZW50cy9mb290ZXIvZm9vdGVyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksb0JBQW1CLEVBQ3RCIiwiZmlsZSI6InNyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvZm9vdGVyL2Zvb3Rlci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImZvb3RlciB7XG4gICAgcGFkZGluZzogNXB4IDAgMzBweDtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\n\n// Config\nimport { config } from \"../../../app.config\";\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  CONFIG = config;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<header>\\n\\n    <app-nav></app-nav>\\n\\n</header>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL2hlYWRlci9oZWFkZXIuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-fixed-top navbar-dark bg-primary\\\">\\n    <a class=\\\"navbar-brand\\\" routerLink=\\\"/\\\">{{ CONFIG.appName | myCapitalize }}</a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarColor01\\\" aria-controls=\\\"navbarColor01\\\"\\n        aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarColor01\\\">\\n        <ul *ngIf=\\\"authService.isAuthenticated\\\" class=\\\"navbar-nav mr-auto\\\">\\n            <li class=\\\"nav-item active\\\">\\n                <a class=\\\"nav-link\\\" routerLink=\\\"/\\\">View Holograms <span class=\\\"sr-only\\\">(current)</span></a>\\n            </li>\\n            <li class=\\\"nav-item\\\">\\n                <a class=\\\"nav-link\\\" routerLink=\\\"/add-hologram\\\">Add Hologram</a>\\n            </li>\\n        </ul>\\n        <!-- <form class=\\\"form-inline my-2 my-lg-0\\\">\\n            <input class=\\\"form-control mr-sm-2\\\" type=\\\"text\\\" placeholder=\\\"Search\\\">\\n            <button class=\\\"btn btn-secondary my-2 my-sm-0\\\" type=\\\"submit\\\">Search</button>\\n        </form> -->\\n        <ul class=\\\"navbar-nav my-2 my-lg-0\\\">\\n            <li class=\\\"nav-item\\\">\\n                <a *ngIf=\\\"!authService.isAuthenticated\\\" class=\\\"nav-link\\\" [routerLink]=\\\"['/login']\\\">Login</a>\\n            </li>\\n\\n            <li class=\\\"nav-item\\\">\\n                <a *ngIf=\\\"authService.isAuthenticated\\\" class=\\\"nav-link\\\" (click)=\\\"logout()\\\">Logout</a>\\n            </li>\\n\\n            <li class=\\\"nav-item\\\">\\n                <a *ngIf=\\\"!authService.isAuthenticated\\\" class=\\\"nav-link\\\" [routerLink]=\\\"['/register']\\\">Register</a>\\n            </li>\\n        </ul>\\n    </div>\\n</nav>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL25hdi9uYXYuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, Input } from '@angular/core';\n\n// Configuration\nimport { config } from \"../../../app.config\";\n\n// Services\nimport { AuthService } from \"../../services/auth/auth.service\";\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: 'nav.component.html',\n  styleUrls: ['nav.component.scss']\n})\nexport class NavComponent implements OnInit {\n\n  private appName: string;\n\n  private currentLang: string;\n\n  CONFIG = config;\n\n  @Input() private currentUser: any;\n\nconstructor(public authService: AuthService) {\n    this.appName = config.appName;\n  }\n\n  ngOnInit() {\n    this.currentLang = 'en';\n\n    if ( localStorage.getItem('lang') ) {\n      this.currentLang = localStorage.getItem('lang');\n    }\n  }\n\n  public toggleLanguage(lang: string): void {\n    if (localStorage.getItem('lang') !== lang) {\n      this.currentLang = ( this.currentLang === 'en' ) ? 'fr' : 'en';\n\n      localStorage.setItem('lang', this.currentLang);\n\n      location.reload();\n    }\n  }\n\n  public logout(): void {\n    this.authService.logout();\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'myCapitalize'\n})\nexport class CapitalizePipe implements PipeTransform {\n\n  public transform(value: string): string {\n    return !value ? null : value.toLowerCase()\n                .replace( /\\b./g, (a) => a.toUpperCase() );\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\n\n// Services\nimport { AuthService } from \"./auth.service\";\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n  constructor(private router: Router,\n              private authService: AuthService) {}\n\n  public canActivate( next: ActivatedRouteSnapshot,\n                      state: RouterStateSnapshot) {\n      if (this.authService.isAuthenticated) {\n        return true;\n      } else {\n        this.router.navigate(['/login']);\n        return false;\n      }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n// Configuration\nimport { config } from \"../../../app.config\";\n\n@Injectable()\nexport class AuthService {\n\n  private AUTH_API_URL: string = config.backendAUTH_API_URL;\n\n  private NAME_KEY: string = 'name';\n\n  private ID_KEY: string = '_id';\n\n  private TOKEN_KEY: string = 'token';\n\n  constructor(private http: HttpClient,\n              private router: Router) { }\n\n  public get name(): string {\n    return localStorage.getItem(this.NAME_KEY);\n  }\n\n  public get id(): string {\n    return localStorage.getItem(this.ID_KEY);\n  }\n\n  public get isAuthenticated(): boolean {\n    return !!localStorage.getItem(this.TOKEN_KEY);\n  }\n\n  public getToken(): string {\n    return localStorage.getItem('token');\n  }\n\n  public set isAuthenticated(value: boolean) {\n    // empty implementation just for the purposes of testing\n  }\n\n  public registerUser(user: any): any {\n    console.log(`create user: ${user.firstname}...`);\n\n    this.http.post(`${this.AUTH_API_URL}/register`, user).subscribe(\n      (res) => {\n        this._authenticate(res);\n      },\n      (error) => {\n        console.log('500 - server error');\n      });\n  }\n\n  public login(user: any): any {\n    console.log(`authenticating user: ${user.username}...`);\n\n    this.http.post(`${this.AUTH_API_URL}/login`, user).subscribe(\n      (res) => {\n        this._authenticate(res);\n      },\n      (error) => {\n        console.log('500 - server error');\n      });\n  }\n\n  public logout(): void {\n    localStorage.removeItem(this.NAME_KEY);\n    localStorage.removeItem(this.ID_KEY);\n    localStorage.removeItem(this.TOKEN_KEY);\n\n    this.router.navigate(['/login']);\n  }\n\n  private _authenticate(res): void {\n    let authResponse = res;\n\n    if (!authResponse.token) {\n      console.log(authResponse.message);\n      return;\n    }\n\n    localStorage.setItem(this.TOKEN_KEY, authResponse.token);\n    localStorage.setItem(this.ID_KEY, authResponse._id);\n    localStorage.setItem(this.NAME_KEY, authResponse.firstname);\n\n    this.router.navigate(['/']);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n// Services\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenInterceptorService implements HttpInterceptor {\n\n  constructor(public auth: AuthService) { }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    \n    request = request.clone({\n      setHeaders: {\n        Authorization: `Bearer ${this.auth.getToken()}`\n      }\n    });\n    return next.handle(request);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n// Configuration\nimport { config } from \"../../../app.config\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HologramService {\n\n  private API_URL: string = config.backendAPI_URL;\n\n  constructor(private http: HttpClient) { \n    console.log(this.API_URL);\n  }\n\n  public getHolograms(): any {\n    return this.http.get(`${this.API_URL}/holograms`);\n  }\n\n  public getHologram(hologramid: any): any {\n    return this.http.get(`${this.API_URL}/holograms/${hologramid}`);\n  }\n\n  public addHologram(hologram: any): any {\n    return this.http.post(`${this.API_URL}/holograms`, hologram);\n  }\n\n  public deleteHologram(hologramid: any): any {\n    return this.http.post(`${this.API_URL}/holograms/${hologramid}`, {});\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n// Configuration\nimport { config } from \"../../../app.config\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  private API_URL: string = config.backendAPI_URL;\n\n  constructor(private http: HttpClient) { }\n\n  public getUsers(): any {\n    return this.http.get(`${this.API_URL}/users`);\n  }\n\n  public getUser(userid: any): any {\n    return this.http.get(`${this.API_URL}/users/${userid}`);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  backendHost: \"\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}